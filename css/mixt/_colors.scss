
// THEMES

@import 'themes/themes';

// COLORS

$white: #fff;
$off-white: #f6f6f6;
$grey: #EFEFEF;
$black: #333;

$blue: #5991CE;
$sky: #5AA1E3;
$turquoise: #00C1CF;
$peacoc: #4CADC9;
$vista-blue: #75D69C;
$violet: #8D6DC4;
$purple: #B97EBB;

$green: #7CAD24;
$grace: #AED13B;

$pink: #FE6C61;
$juicy-pink: #F4524D;
$mulled-wine: #50485B;

$chino: #CEC2AB;
$orange: #FF911E;
$sandy-brown: #F79468;

$red: #D81616;


// =====================================================
// When adding or removing colors from the maps below,
// also update the assets array in core/assets.php
// =====================================================

$basic-colors: (
	'white': $white,
	'grey': $grey,
	'black': $black,
	'orange': $orange,
	'red': $red,
	'green': $green,
	'blue': $blue,
);

$button-colors: (
	'white': $white,
	'grey': $grey,
	'black': $black,
	'red': $red,
	'orange': $orange,
	'green': $green,
	'blue': $blue,
	'violet': #9B27BF,
);

$vc-colors: (
	'white': #FFFFFF,
	'off-white': #f0f0f0,
	'grey': #EBEBEB,
	'black': #2A2A2A,

	'blue': #5472D2,
	'sky': #5AA1E3,
	'turquoise': #00C1CF,
	'peacoc': #4CADC9,
	'vista-blue': #75D69C,
	'violet': #8D6DC4,
	'purple': #B97EBB,

	'green': #6DAB3C,
	'grace': #AED13B,

	'pink': #FE6C61,
	'juicy-pink': #F4524D,
	'mulled-wine': #50485B,

	'chino': #CEC2AB,
	'orange': #F7BE68,
	'sandy-brown': #F79468,

	'red': #D81616,
);


// FUNCTIONS

// Calculate a color's luminance
@function lumin($color) {
	// Colors for which to override luminance
	$override-colors: (
		$blue: 0.4,
		$green: 0.4,
		$orange: 0.4,
	);
	@if map-has-key($override-colors, $color) {
		$lumin: map-get($override-colors, $color);
	} @else {
		$local-red: red($color);
		$local-green: green($color);
		$local-blue: blue($color);
		$lumin: (0.2126 * $local-red  + 0.7152 * $local-green + 0.0722 * $local-blue) / 255;
		@if ( $lumin > 1 ) { $lumin: 1; }
		@if ( $lumin < 0 ) { $lumin: 0; }
	}
	@return $lumin;
}


// Return one of 2 colors which contrasts most with the background color
@function contrast-color($bg, $c1, $c2) {
	$bg-lumin: lumin($bg);
	$c1-diff: abs($bg-lumin - lumin($c1));
	$c2-diff: abs($bg-lumin - lumin($c2));
	@if ( $c1-diff > $c2-diff ) {
		@return $c1;
	} @else {
		@return $c2;
	}
}

// lumin and contrast-color functions based on https://lnikki.la/articles/sass-better-colour-based-on-brightness/


@function set-color-for-bg( $bg, $light: #fff, $dark: #333 ) {
	@if ( lumin($bg) <= 0.5 ) { @return $light; }
	@else { @return $dark; }
}


@function color-fade-for-bg( $bg, $light: lighten($bg, 40), $dark: darken($bg, 50) ) {
	@if ( lumin($bg) <= 0.5 ) { @return $light; }
	@else { @return $dark; }
}


// MIXINS

// Background

@mixin bg-color-alpha($color, $opacity: 0.9) {
    background-color: $color;
    background-color: rgba($color, $opacity);
}


@mixin mixt-bg-variant($selector, $color, $set-color: false, $set-text-shadow: false) {
	#{$selector} {
		background-color: $color;
		@if ( $set-color ) { color: set-color-for-bg($color); }
		@if ( opacity($color) < 1 ) { $color: fade-in($color, 1); }
		@if ( $set-text-shadow ) { @include text-shadow-for-bg($color); }
	}
}


// Text Shadow

@mixin text-shadow-for-bg( $bg, $light: rgba(255,255,255,0.1), $dark: rgba(0,0,0,0.1) ) {
	@if ( lumin($bg) <= 0.5 ) { $color: $dark; }
	@else { $color: $light; }
	text-shadow: 0 1px 1px $color;
}


// Border

@mixin bd-color-alpha($color, $opacity: 0.9) {
	border-color: $color;
	border-color: rgba($color, $opacity);
}


// COLOR VARIANTS

%basic-color-text-variants {
	@each $sel, $color in $basic-colors {
		&.#{$sel} {
			color: $color;
		}
	}
	@each $theme, $colors in $themes {
		.theme-#{$theme} &.accent {
			color: map-get($colors, 'accent');
		}
	}
}

%basic-color-bg-variants {
	@mixin bg-variants($color) {
		color: set-color-for-bg($color);
		border-color: darken($color, 10);
		background-color: $color;
		@include text-shadow-for-bg($color);
	}
	@each $sel, $color in $basic-colors {
		&.#{$sel} {
			@include bg-variants($color);
		}
	}
	@each $theme, $colors in $themes {
		.theme-#{$theme} &.accent {
			@include bg-variants(map-get($colors, 'accent'));
		}
	}
}

%basic-color-border-variants {
	@each $sel, $color in $basic-colors {
		&.#{$sel} { border-color: $color; }
	}
	@each $theme, $colors in $themes {
		.theme-#{$theme} &.accent {
			border-color: map-get($colors, 'accent');
		}
	}
}