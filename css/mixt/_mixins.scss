
// VISIBILITY

@mixin vis-visible {
	opacity: 1;
	visibility: visible;
}
@mixin vis-hidden {
	opacity: 0;
	visibility: hidden;
}


// BACKGROUND

@mixin bg-color-alpha( $color, $opacity: 0.9 ) {
    background-color: $color;
    background-color: rgba($color, $opacity);
}


@mixin mixt-bg-variant( $selector, $color, $set-color: false, $set-text-shadow: false ) {
	#{$selector} {
		background-color: $color;
		@if ( opacity($color) < 1 ) { $color: fade-in($color, 1); }
		@if ( $set-color ) { color: set-color-for-bg($color); }
		@if ( $set-text-shadow ) { @include text-shadow-for-bg($color); }
	}
}


// TEXT SHADOW

@mixin text-shadow-for-bg( $bg, $light: rgba(255,255,255,0.1), $dark: rgba(0,0,0,0.1) ) {
	text-shadow: 0 1px 1px set-textsh-for-bg($bg, $light, $dark);
}


// BORDER

@mixin bd-color-alpha( $color, $opacity: 0.9 ) {
	border-color: $color;
	border-color: rgba($color, $opacity);
}


// CLEARFIX

@mixin clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after { clear: both; }
}


// GRADIENTS

@mixin gradient-linear($from, $to) {
	background-image: -webkit-linear-gradient(top, $from, 0%, $to, 100%);
	background-image: -moz-linear-gradient(top, $from 0%, $to 100%);
	background-image: linear-gradient(to bottom, $from 0%, $to 100%);
}


// SHADOWS

@mixin highlight($alpha:0.4) {
	box-shadow: inset 0 1px 1px rgba(255,255,255,$alpha);
}


// TRANSITIONS

@mixin button-transition($color: 0.2s, $border: 0.3s, $background: 0.2s, $box-shadow: 0.3s, $text-shadow: 0.3s, $transform: 0.3s) {
	transition: color $color, border $border, background $background, box-shadow $box-shadow, text-shadow $text-shadow, transform $transform;
}


// MEDIA BREAKPOINTS

$media-conditions: (
	// Media
	'print':   'only print',
	'screen':  'only screen',
	'retina':  '(-webkit-min-device-pixel-ratio: 1.5),\a'
			   '(min--moz-device-pixel-ratio: 1.5),\a'
			   '(-o-min-device-pixel-ratio: 3/2),\a'
			   '(min-device-pixel-ratio: 1.5),\a'
			   '(min-resolution: 120dpi)'
);

$breakpoints: (
	// Phones
	'mercury': $screen-xs-min,
	// Tablets
	'mars':    $screen-sm-min,
	// Laptops
	'venus':   $screen-md-min,
	// Desktops
	'earth':   $screen-lg-min,
	// Navbar mobile breakpoint
	'navbar':  $grid-float-breakpoint,
);
@each $bp-name, $bp-width in $breakpoints {
	$conditions: (
		'#{$bp-name}': '(min-width: #{$bp-width})',
		'<#{$bp-name}': '(max-width: #{$bp-width - 1})'
	);
	$media-conditions: map-merge($media-conditions, $conditions);
}

@mixin media($args...) {
	$query: "";
	@each $arg in $args {
		$op: "";
		@if ( $query != "" ) {
			$op: " and ";
		}
		$condition: $arg;
		@if map-has-key($media-conditions, $arg) {
			$condition: map-get($media-conditions, $arg);
		}
		$query: $query + $op + $condition;
	}
	@media #{$query}  { @content; }
}


// ARROWS

// Border Arrow
// Based on http://codepen.io/MichaelArestad/pen/IxFGj
@mixin border-arrow($dir: top, $size: 10px, $color: auto, $origin: 50%, $margin: -1px, $pseudo: before) {
	position: relative;

	@if $color != auto {
		border-color: $color;
	}

	&:#{$pseudo} {
		content: ' ';
		position: absolute;
		width: 0; height: 0;
		border-color: inherit;

		@if $dir == top {
			left: $origin;
			bottom: 100%;
			margin-left: $size * -1;
			margin-bottom: $margin;
			border-left: $size solid transparent;
			border-right: $size solid transparent;
			border-bottom: $size solid transparent;
			border-bottom-color: inherit;
		} @else if $dir == left {
			top: $origin;
			right: 100%;
			margin-right: $margin;
			margin-top: $size * -1;
			border-top: $size solid transparent;
			border-bottom: $size solid transparent; 
			border-right: $size solid transparent;
			border-right-color: inherit;
		} @else if $dir == right {
			top: $origin;
			left: 100%;
			margin-top: $size * -1;
			margin-left: $margin;
			border-top: $size solid transparent;
			border-bottom: $size solid transparent;
			border-left: $size solid transparent;
			border-left-color: inherit;
		} @else {
			top: 100%;
			left: $origin;
			margin-top: $margin;
			margin-left: $size * -1;
			border-left: $size solid transparent;
			border-right: $size solid transparent;
			border-top: $size solid transparent;
			border-top-color: inherit;
		}
	}
}

// Square Arrow
@mixin square-arrow($dir: top, $size: 10px, $bg: none, $border: none, $origin: 50%, $offset: $size / -2, $pseudo: before) {
	position: relative;

	&:#{$pseudo} {
		content: ' ';
		position: absolute;
		width: $size; height: $size;
		border-width: 1px;
		border-style: solid;
		border-color: transparent;

		@if $border != none {
			border-color: $border;
		}

		@if $bg != none {
			background-color: $bg;
		}

		transform: rotate(45deg);

		@if $dir == top {
			left: $origin;
			top: $size / -2;
			margin-left: $offset;
			border-right-width: 0;
			border-bottom-width: 0;
		} @else if $dir == left {
			top: $origin;
			left: $size / -2;
			margin-top: $offset;
			border-top-width: 0;
			border-right-width: 0;
		} @else if $dir == right {
			top: $origin;
			right: $size / -2;
			margin-top: $offset;
			border-left-width: 0;
			border-bottom-width: 0;
		} @else {
			left: $origin;
			bottom: $size / -2;
			margin-left: $offset;
			border-top-width: 0;
			border-left-width: 0;
		}
	}
}


// PLUGINS

@mixin select2-theme-color($bg, $color, $border) {
	.select2-container a.select2-choice {
		color: $color;
		border-color: $border;
		background-color: $bg;
	}

	.select2-drop {
		color: $color;
		background-color: $bg;

		&,
		&.select2-drop-active {
			border-color: $border;
		}
	}

	.select2-results {
		background-color: $bg;
		
		.select2-highlighted {
			color: $color;
			background-color: lighten($bg, 5);
		}
	}
}