
$btn-height: 34px;

.btn {
	transition: color 0.2s, border 0.3s, background 0.2s, box-shadow 0.3s, text-shadow 0.3s;

	&.icon-l i { margin: 0 6px 0 0; }

	&.icon-r i { margin: 0 0 0 6px; }
}

.input-group-btn .btn { height: $btn-height; }


// Solid Color Variants
@mixin button-color($selector, $color) {
	.btn-#{$selector} {
		@include text-shadow-for-bg($color);
		border-color: darken($color, 5);
		background-color: $color;

		&:hover,
		&:focus {
			@if ( lumin($color) >= 0.3 ) {
				background-color: darken($color, 5);
			} @else {
				background-color: lighten($color, 5);
			}
		}
	}

	.btn-hover-#{$selector} {
		&:hover,
		&:focus {
			@include text-shadow-for-bg($color);
			border-color: darken($color, 5);
			background-color: $color !important;
		}
	}

	.btn-#{$selector},
	.btn-hover-#{$selector}:hover {
		&:active,
		&.active {
			border-color: darken($color, 10);
			box-shadow: inset 0 1px 12px darken($color, 10);
		}
	}

	.btn-#{$selector},
	.btn-#{$selector}:hover,
	.btn-#{$selector}:focus,
	.btn-hover-#{$selector}:hover,
	.btn-hover-#{$selector}:focus { color: set-color-for-bg($color); }
}
@each $selector, $color in $button-colors {
	@include button-color($selector, $color);
}
@include button-color('shine', rgba(255,255,255,0.6));
@include button-color('shade', rgba(0,0,0,0.6));
.btn-primary { @extend .btn-accent; }
.btn-success { @extend .btn-green; }


// Outline Color Variants
@mixin button-outline-color($selector, $color) {
	.btn-outline-#{$selector}:hover {
		@if ( lumin($color) >= 0.3 ) {
			background-color: rgba(darken($color, 5), 0.05);
		} @else {
			background-color: rgba(lighten($color, 5), 0.05);
		}
	}

	.btn-outline-#{$selector},
	.btn-hover-outline-#{$selector}:hover {
		border: 1px solid $color;
		background-color: transparent;

		&:active,
		&.active {
			box-shadow: inset 0 1px 16px rgba(0,0,0,0.05);
		}
	}

	.btn-outline-#{$selector},
	.btn-outline-#{$selector}:hover,
	.btn-outline-#{$selector}:focus,
	.btn-hover-outline-#{$selector}:hover,
	.btn-hover-outline-#{$selector}:hover:focus { color: $color; }
}
@each $selector, $color in $button-colors {
	@include button-outline-color($selector, $color);
}


// Button Styles

	// Pill (round)
	.btn-round { border-radius: 20px; border-radius: 50%; }
	// Embossed
	.btn-emboss {
		&:not(:active) { border-bottom-width: 2px; }
	}
	// Inset
	.btn-inset { box-shadow: inset 0 1px 3px rgba(0,0,0,0.1); }
	// Outset
	.btn-outset { box-shadow: 0 1px 3px rgba(0,0,0,0.1); }


// Button Effects

.btn-fill,
.btn-fill-in {
	position: relative;
	overflow: hidden;
	transform: translateZ(0);

	&:before {
		content: "";
		position: absolute;
		top: -1px; left: -1px; right: -1px; bottom: -1px;
		border-radius: inherit;
		transform: scale(0);
		transition: transform 0.4s;
		z-index: -1;
	}
}
.btn-fill-in {
	&:before { transform: scale(1.2); }
	&:hover, &:focus, &:active {
		&:before { transform: scale(0); }
	}
}
.btn-fill {
	&:hover, &:focus, &:active {
		&:before { transform: scale(1.2); }
	}
}

// Effect Colors
@mixin button-effect-colors($selector, $color) {
	.btn-fill-in-#{$selector} {
		background-color: $color !important;
		&:hover, &:focus, &:active {
			border-color: $color;
			color: set-color-for-bg($color);
			@include text-shadow-for-bg($color);
		}
	}
	.btn-#{$selector}.btn-fill-in {
		&:before { background-color: $color; }
	}

	.btn-fill-#{$selector} {
		&:hover, &:focus, &:active {
			border-color: $color;
			color: set-color-for-bg($color);
			@include text-shadow-for-bg($color);
		}
		&:before { background-color: $color; }
	}
}
@each $selector, $color in $button-colors {
	@include button-effect-colors($selector, $color);
}


// Button Animations

// Icon Animations
.btn-icon-goDown,
.btn-hover-icon-goDown:hover {
	i { @extend %anim-goDown; }
}