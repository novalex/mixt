
@mixin navbar-theme($name, $theme) {

	/* ## #{$name} Navbar Theme
	-------------------------- */

	$accent: map-get($theme, 'accent');

	$bg: map-get($theme, 'bg');

	$color: map-get($theme, 'color');
	$color-inv: map-get($theme, 'color-inv');

	$border: map-get($theme, 'border');
	$border-inv: theme-color($theme, 'border-inv', darken($bg, 10));

	$menu-bg: theme-color($theme, 'menu-bg', $bg);
	$menu-bg-hover: theme-color($theme, 'menu-bg-hover', rgba(0,0,0,0.02));

	$menu-color: theme-color($theme, 'menu-color', $color);
	$menu-hover-color: theme-color($theme, 'menu-hover-color', $accent);

	$menu-border: theme-color($theme, 'menu-border', $border);
	$menu-border-alpha: theme-color($theme, 'menu-border-alpha', false);

	$has-inv-accent: if( map-has-key($theme, 'accent-inv'), true, false );
	$accent-inv: if( $has-inv-accent, map-get($theme, 'accent-inv'), $accent );

	$bg-dark: theme-color($theme, 'bg-dark', false);

	$bg-light-accent: if( $bg-dark, $accent-inv, $accent );
	$bg-light-color: if( $bg-dark, $color-inv, $color );
	$bg-light-border: if( $bg-dark, $border-inv, $border );

	$bg-dark-accent: if( $bg-dark, $accent, $accent-inv );
	$bg-dark-color: if( $bg-dark, $color, $color-inv );
	$bg-dark-border: if( $bg-dark, $border, $border-inv );

	$bg-dark-sel: if( $bg-dark, '&', '&.bg-dark' );
	$bg-light-sel: if( $bg-dark, '&.bg-light', '&' );

	$menu-color-fade: if( $bg-dark, theme-color($theme, 'menu-color-fade', darken($menu-color, 10)), theme-color($theme, 'menu-color-fade', lighten($menu-color, 10)) );

	.navbar.theme-#{$name} {
		border-color: $border;
		background-color: $bg;

		.navbar-data { background-color: $bg !important; }

		@if ( $bg-dark ) {
			.navbar-data:before { content: 'dark'; }

			#nav-logo .logo-dark { position: static; opacity: 1; visibility: visible; }
			#nav-logo .logo-light { position: absolute; opacity: 0; visibility: hidden; }

			#{$bg-light-sel} {
				#nav-logo .logo-dark { position: absolute; opacity: 0; visibility: hidden; }
				#nav-logo .logo-light { position: static; opacity: 1; visibility: visible; }
			}
		} @else {
			.navbar-data:before { content: 'light'; }
		}

		// SUBMENUS
		
		.sub-menu {
			background-color: $menu-bg;

			li > a,
			li > a:focus,
			li:hover > a,
			li.hover > a {
				&:hover {
					color: $menu-hover-color;
					background-color: $menu-bg-hover;
				}
			}

			li,
			li > a,
			input { color: $menu-color; }

			input { @include placeholder($menu-color-fade); }

			&,
			> li,
			> li > a {
				border-color: $menu-border;
				@if $menu-border-alpha { border-color: $menu-border-alpha; }
			}

			li > a:hover,
			.active > a,
			.active > a:hover {
				color: $accent;
			}
		}

		// OTHER ELEMENTS

		.nav-search .search-form {
			button {
				border-color: $menu-border;
				@if $menu-border-alpha { border-color: $menu-border-alpha; }
				background-color: darken($menu-bg, 3);
			}
			input, button { color: $menu-color; }
		}
		.accent-bg {
			color: set-color-for-bg($accent);
			background-color: $accent;
		}

		// LIGHT BACKGROUND
		
		#{$bg-light-sel} {
			.nav > li > a,
			.text-cont,
			.text-cont a:hover,
			.text-cont a.no-color {
				color: $bg-light-color;
			}

			@if ( $has-inv-accent ) {
				.nav > li:hover > a,
				.nav > li.hover > a,
				.nav > li > a:hover,
				.nav > .active > a,
				.text-cont a {
					color: $bg-light-accent;
				}
				.nav > .active > a:before { background-color: $bg-light-accent; }
			}

			.navbar-toggle .icon-bar {
				background-color: $bg-light-color;
			}

			.nav > li,
			.nav > li > a,
			.navbar-toggle { border-color: $bg-light-border; }

			.divider { background-color: $bg-light-border; }
		}

		// DARK BACKGROUND

		#{$bg-dark-sel} {
			.nav > li > a,
			.text-cont,
			.text-cont a:hover,
			.text-cont a.no-color {
				color: $bg-dark-color;
			}

			@if ( $has-inv-accent ) {
				.nav > li:hover > a,
				.nav > li.hover > a,
				.nav > li > a:hover,
				.nav > .active > a,
				.text-cont a {
					color: $bg-dark-accent;
				}
				.nav > li.active > a:before { background-color: $bg-dark-accent; }
			}

			.navbar-toggle .icon-bar {
				background-color: $bg-dark-color;
			}

			.nav > li,
			.nav > li > a,
			.navbar-toggle { border-color: $bg-dark-border; }

			.divider { background-color: $bg-dark-border; }
		}

		@if ( $has-inv-accent == false ) {
			.nav > li:hover > a,
			.nav > li.hover > a,
			.nav > li > a:hover,
			.nav > li.active > a,
			.text-cont a {
				color: $accent;
			}
			.nav > li.active > a:before { background-color: $accent; }
		}
	}

	// MAIN NAVBAR STYLES
	
	.navbar-mixt.theme-#{$name} {
		&:not(.position-top):not(.vertical) {
			background-color: rgba($bg, $nav-primary-opacity);
		}

		.sub-menu {
			background-color: rgba($menu-bg, $nav-primary-menu-opacity);
		}

		@include media('screen', '<navbar') {
			&.navbar {
				.navbar-inner {
					background-color: $menu-bg;
				}

				.navbar-inner .text-cont,
				.navbar-inner .text-cont a:hover,
				.navbar-inner .text-cont a.no-color,
				.nav > li > a {
					color: $menu-color;
				}

				// Hover State
				.nav {
					> li > a,
					> li > a:focus,
					> li:hover > a,
					> li.hover > a,
					> li.active > a {
						&:hover {
							color: $menu-hover-color;
							background-color: $menu-bg-hover;
						}
					}

					> li:hover > a,
					> li.hover > a { color: $menu-color; }

					li.nav-search {
						&:hover > a,
						&.hover > a {
							color: $menu-color !important;
							background-color: transparent !important;
						}
					}
				}

				.nav > li.active > a,
				.navbar-inner .text-cont a { color: $accent; }

				@if ( $has-inv-accent ) {
					.nav > li.active > a:before { background-color: $accent; }
				}

				// Border Colors
				.navbar-inner,
				.nav > li,
				.nav > li > a {
					border-color: $menu-border;
					@if $menu-border-alpha { border-color: $menu-border-alpha; }
				}
			}
		};
	}
}

// Generate navbar themes
@each $name, $theme in $nav-themes {
	@include navbar-theme($name, $theme);
}